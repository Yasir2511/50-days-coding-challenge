
You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.

Increment the large integer by one and return the resulting array of digits.


class Solution {
    public int[] plusOne(int[] digits) {
        int length = digits.length;
        
        for (int i = length - 1; i >= 0; i--) {
            // Increment the current digit by one
            digits[i]++;
            
            // If the current digit is less than 10, return the result
            if (digits[i] < 10) {
                return digits;
            }
            
            // If the current digit becomes 10, set it to 0 and continue the loop to handle carry
            digits[i] = 0;
        }
        
        // If all digits are 0 after the loop, it means we had a carry at the highest place
        int[] newDigits = new int[length + 1];
        newDigits[0] = 1;  // Set the first digit to 1, remaining digits are already 0
        return newDigits;
    }
}
