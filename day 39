Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 


import java.util.Arrays;

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
         int arr3[] = new int[n1 + n2];
         System.out.println("Array after merging");
        int i = 0; 
        int j = 0; 
        int k = 0; 
        while (i < n1) { 
            arr3[k++] = nums1[i++]; 
        } 
        while (j < n2) { 
            arr3[k++] = nums2[j++]; 
        }
        Arrays.sort(arr3);
        int totalLength = n1 + n2;
        if (totalLength % 2 != 0) {
            return arr3[totalLength / 2];
        } 
        else {
            return (arr3[totalLength / 2 - 1] + arr3[totalLength / 2]) / 2.0;
        }
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        
        int[] nums1 = {1, 3};
        int[] nums2 = {2};
        
        double median = sol.findMedianSortedArrays(nums1, nums2);
        System.out.println("The median is: " + median); 
    }
}
