//Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such 
//that each unique element appears only once. The relative order of the elements should be kept the same. Then return the number of unique elements in nums.
//Consider the number of unique elements of nums to be k, to get accepted, you need to do the following things:
//Change the array nums such that the first k elements of nums contain the unique elements in the order they were present in nums initially.
//The remaining elements of nums are not important as well as the size of nums.
//Return k.
class Solution {
    public int removeDuplicates(int[] nums) {
        int length = nums.length;
        if (length == 0) return 0;

        int[] arr = new int[length];
        int k = 0;
        arr[k] = nums[0];

        for (int j = 1; j < length; j++) {
            boolean isDuplicate = false;
            for (int i = 0; i <= k; i++) {
                if (nums[j] == arr[i]) {
                    isDuplicate = true;
                    break;
                }
            }
            if (!isDuplicate) {
                k++;
                arr[k] = nums[j];
            }
        }

        for (int i = 0; i <= k; i++) {
            nums[i] = arr[i];
        }

        return k + 1; 
    }
}
